#!/bash/sh
ME=`basename $0`
SOSPWD=~/trunks/aop/var/db/sospwd
DEBUGGER=0; [ $ME = "bashdb" ] && DEBUGGER=1
SQLCOMP="sqlcomp"
SQLDATACOMP="sqldatacomp"
LOGDIR="/var/log/mig"
CURRICULUM_ZIPFILE=/tmp/curdir.zip
CURRICULUM_SVN_SERVER=svn.owteam.com

function testret(){
        [ $1 = 0 ] || die "$2 (retval: $1)"
}
function chkbin(){
    bin="$1"
    which "$bin" &>/dev/null
    return $?
}
function demandbin(){
    bin="$1"
    if ! chkbin "$bin"; then
        die "Missing executable: $1"
    fi
}
function die(){
        warn "$ME: $1" 
        exit 1
}
function warn(){
        echo "$1" >&2
}
function isint(){
    echo "$1" | grep "^[0-9]\+$" -i >/dev/null 
    return $?
}
function resolveprog(){
    if [ -n "$PROG" ]; then
        [ -r "$SOSPWD" ] || die   "Can't read from sospwd ($SOSPWD)"
        [ -z "$UNAME"  ] && UNAME=sa

        PASS_DB=`awk "\\$1==\"$PROG\" && \\$2==\"$UNAME\" {print \\$3, \\$4, \\$5}" $SOSPWD` || \
                die "Couldn't get password"

        [ -z "$PASS" ] && PASS=`echo $PASS_DB | awk '{print $1}'`

        if [ -z "$SRV" ]; then 
            INST=`  echo $PASS_DB | awk '{print $2}'`
            SRV="(local)\\$INST"
        fi

        [ -z "$DB"   ] && DB=`  echo $PASS_DB | awk '{print $3}'`
        
        [ -z "$PASS" -o -z "$SRV" -o -z "$DB" ] \
                && die "Can't find all values for $PROG from $SOSPWD"
    else
        [ -z "$DB"  ] && usage 'Missing DB -d'
        [ -z "$SRV" ] && usage 'Missing server -s'
   fi
}
lc() {
    if [ -z "$1" ]; then
        return
    fi
    echo $1 | tr "[:upper:]" "[:lower:]" 
} 

uc() {
    if [ -z "$1" ]; then
        return
    fi
    echo $1 | tr "[:lower:]" "[:upper:]" 
} 
